import os

import utils


def get_snippet_text(snippet) = open(os.path.join(utils.templates_dir, 'snippets', snippet)).read()[:-1]


def contained_snippets(text) = (
    [snippet for snippet in snippet_list() if snippet in text]
    )
    

def get_snippets_for_template(template, name, values, config):
    template_text = utils.get_template_text(template)
    values = values.copy()
    template_snippets(template_text, values, config)
    return values


def template_snippets(text, values, config):
    for snippet_name in contained_snippets(text):
        values[snippet_name] = get_snippet(snippet_name, values, config)


def get_snippet(snippet_name, values, config):
    for processor in get_processors():
        case processor(snippet_name, values, config):
            match (True, text):
                return text


def get_processors(processors = []) = processors


def register_processor(processor):
    get_processors().append(processor)
    return processor


def snippet_list() = os.path.join(utils.templates_dir, 'snippets') |> os.listdir

@register_processor
def flow_filter_processor(snippet_name, values, config) = ( 
    'flow' in snippet_name and not config['flow'], ''
    )

@register_processor
def default_processor(snippet_name, values, config):
    text = get_snippet_text(snippet_name)
    if contained_snippets(text):
        template_snippets(text, values, config)
    return True, text.format(**values)
